#include "imports/stdlib.fc";

forall X -> tuple tuples::tset(tuple t, int k, X x) asm(t x k) "SETINDEXVAR";
forall X -> (tuple, ()) ~tset(tuple t, int k, X x) asm(t x k) "SETINDEXVAR";
forall X -> tuple tuples::tsetq(tuple t, int k, X x) asm(t x k) "SETINDEXVARQ";
forall X -> (tuple, ()) ~tsetq(tuple t, int k, X x) asm(t x k) "SETINDEXVARQ";
forall X -> (tuple, X) tuples::tpop(tuple t) asm "TPOP";
forall X -> (int) tuples::is_tuple(X t) asm "ISTUPLE";
int tuples::tlen(tuple t) asm "TLEN";
int tuples::tlenq(tuple t) asm "QTLEN";

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {

}

(int, int, int, tuple) solve(int n, int m, tuple maze) method_id {
    return (-1, 0, 0, null());
}